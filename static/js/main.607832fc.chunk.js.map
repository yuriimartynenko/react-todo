{"version":3,"sources":["components/TodoInput/index.jsx","components/TodoItems/index.jsx","components/Comment/index.jsx","components/WriteComment/index.jsx","components/Comments/index.jsx","components/App/index.jsx","components/Sidebar/index.jsx","App.js","index.js"],"names":["TodoInput","props","Form","onSubmit","addItem","className","Input","value","onChange","handleInput","type","placeholder","Button","color","disabled","TodoItems","this","items","map","item","key","id","ListGroupItem","action","active","onClick","toggleActive","title","substring","Badge","pill","comments","length","outline","deleteItem","ListGroup","flush","listItems","Component","Comment","comment","Row","Col","xs","src","alt","WriteComment","onKeyUp","addComment","changeInput","commentInput","rows","Comments","selectedItem","handleCommentInput","Fragment","Todo","e","setState","itemInput","target","a","preventDefault","state","uniqueId","Date","getTime","trim","errorTextItem","localStorage","setItem","JSON","stringify","filter","find","selectedIdx","findIndex","idx","ctrlKey","keyCode","errorTextComment","parse","getItem","Container","fluid","sm","Sidebar","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.607832fc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Form, Input } from 'reactstrap';\r\n\r\nconst TodoInput = props => (\r\n    <Form onSubmit={props.addItem} className='d-inline-flex justify-content-between w-100 mb-3'>\r\n        <Input\r\n            className='w-75 mr-2'\r\n            value={props.value}\r\n            onChange={props.handleInput}\r\n            type=\"text\"\r\n            placeholder='Type name here...'\r\n        />\r\n        <Button color='info' disabled={!props.value} className='w-25'>Add new</Button>\r\n    </Form>\r\n)\r\n\r\nexport default TodoInput;","import React, { Component, Fragment } from 'react'\r\nimport { ListGroup, ListGroupItem, Badge, Button } from 'reactstrap';\r\nimport './index.css';\r\n\r\nclass TodoItems extends Component {\r\n    listItems() {\r\n        return this.props.items\r\n            .map(item => {\r\n                return (\r\n                    <Fragment key={item.id}>\r\n                        <ListGroupItem action className={\r\n                            'd-flex justify-content-between '\r\n                            + (item.active ? 'item-active' : '')}\r\n                            onClick={() => this.props.toggleActive(item.id)}\r\n                        >\r\n                            <span className='item-title my-auto font-weight-bold'>\r\n                                {item.title.substring(0, 30) + '...'}\r\n                                <Badge color=\"info\" className=' ml-2 font-weight-normal' pill>{item.comments.length}</Badge>\r\n                            </span>\r\n                            <Button outline color=\"danger\" onClick={() => this.props.deleteItem(item.id)}>Delete</Button>\r\n                        </ListGroupItem >\r\n                    </Fragment>\r\n                )\r\n            })\r\n    }\r\n    render() {\r\n        return <ListGroup className='list__items' flush>{this.listItems()}</ListGroup>\r\n    }\r\n}\r\n\r\nexport default TodoItems;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst Comment = ({ comment: { title } }) => (\r\n    <Row className='m-0 p-3 px-1 comment border-bottom' >\r\n        <Col xs={2}>\r\n            <img className='img-fluid' src='https://picsum.photos/200' alt='' />\r\n        </Col>\r\n        <Col xs={10}>\r\n            {title}\r\n        </Col>\r\n    </Row>\r\n);\r\n\r\nexport default Comment;","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\n\r\nconst WriteComment = (props) => (\r\n    <Row className='m-0 p-3'>\r\n        <Col xs={2}>\r\n            <img className='img-fluid' src=\"https://picsum.photos/200\" alt=\"\" />\r\n        </Col>\r\n        <Col xs={10}>\r\n            <textarea\r\n                onKeyUp={props.addComment}\r\n                onChange={props.changeInput}\r\n                value={props.commentInput}\r\n                rows={4}\r\n                type=\"text\"\r\n                placeholder='CTRL + Enter to Send'\r\n                className='form-control comment-input'\r\n            />\r\n        </Col>\r\n    </Row>\r\n);\r\n\r\nexport default WriteComment;","\r\nimport React from 'react';\r\nimport Comment from '../Comment';\r\nimport WriteComment from '../WriteComment';\r\n\r\nconst Comments = ({ selectedItem: { comments }, addComment, handleCommentInput, commentInput }) => (\r\n    <React.Fragment>\r\n        <div className='list__items'>\r\n            {\r\n                comments &&\r\n                comments.map((comment) => <Comment key={comment.id} comment={comment} />)\r\n            }\r\n        </div>\r\n        <WriteComment\r\n            addComment={addComment}\r\n            changeInput={handleCommentInput}\r\n            commentInput={commentInput}\r\n        />\r\n    </React.Fragment>\r\n);\r\nexport default Comments;","import React, { Component } from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport TodoInput from '../TodoInput';\r\nimport TodoItems from '../TodoItems';\r\nimport Comments from '../Comments';\r\nimport './index.css';\r\n\r\nclass Todo extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            items: [],\r\n            itemInput: '',\r\n            commentInput: '',\r\n            selectedItem: '',\r\n            selectedIdx: '',\r\n            errorTextItem: '',\r\n            errorTextComment: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const items = JSON.parse(localStorage.getItem('items')) || [];\r\n        this.setState({ items });\r\n    }\r\n\r\n    handleInput = e => this.setState({ itemInput: e.target.value });\r\n    handleCommentInput = e => this.setState({ commentInput: e.target.value });\r\n\r\n    addItem = async (e) => {\r\n        e.preventDefault();\r\n        const { items, itemInput } = this.state;\r\n        const uniqueId = new Date().getTime();\r\n        if (itemInput.trim().length < 3) {\r\n            this.setState({ errorTextItem: 'Min 3 symbols...' })\r\n            return;\r\n        }\r\n        await this.setState({\r\n            items: [...items, {\r\n                id: uniqueId,\r\n                title: itemInput,\r\n                comments: [],\r\n                active: false,\r\n            }],\r\n            itemInput: '',\r\n            errorTextItem: '',\r\n        });\r\n        localStorage.setItem('items', JSON.stringify(this.state.items));\r\n        this.toggleActive(uniqueId);\r\n    };\r\n\r\n    deleteItem = async (id) => {\r\n        await this.setState({ items: this.state.items.filter((item) => item.id !== id) });\r\n        localStorage.setItem('items', JSON.stringify(this.state.items));\r\n    };\r\n\r\n    toggleActive = async (id) => {\r\n        await this.setState((state) => {\r\n            const items = state.items.map((item) => {\r\n                if (item.id === id) {\r\n                    return { ...item, active: true }\r\n                } else {\r\n                    return { ...item, active: false }\r\n                }\r\n            }\r\n            );\r\n            return { items };\r\n        });\r\n        localStorage.setItem('items', JSON.stringify(this.state.items));\r\n        const selectedItem = this.state.items.find((item) => item.id === id);\r\n        let selectedIdx = this.state.items.findIndex(idx => idx.id === id);\r\n        selectedIdx++;\r\n        this.setState({ selectedItem, selectedIdx });\r\n    };\r\n\r\n    addComment = async (e) => {\r\n        const { selectedItem: { id, comments }, commentInput } = this.state;\r\n        if (e.ctrlKey && e.keyCode === 13) {\r\n            if (commentInput.trim().length < 3) {\r\n                this.setState({ errorTextComment: 'Min 3 symbols...'})\r\n                return;\r\n            }\r\n            await this.setState((state) => {\r\n                const uniqueId = new Date().getTime();\r\n                const items = state.items.map((item) => {\r\n                    if (item.id === id) {\r\n                        return {\r\n                            ...item,\r\n                            comments: [...comments, { id: uniqueId, title: commentInput }]\r\n                        }\r\n                    } else {\r\n                        return { ...item }\r\n                    }\r\n                }\r\n                );\r\n                return { items };\r\n            });\r\n            localStorage.setItem('items', JSON.stringify(this.state.items));\r\n            const selectedItem = this.state.items.find((item) => item.id === this.state.selectedItem.id);\r\n            this.setState({ selectedItem, commentInput: '', errorTextComment: '' });\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { itemInput, items, selectedItem, selectedIdx, commentInput, errorTextItem, errorTextComment } = this.state;\r\n        return (\r\n            <div className=\"App\">\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col className='mb-6' sm=\"6\">\r\n                            <div className='wrapper__box shadow mb-5 bg-white'>\r\n                                <div className='px-4 pt-3'>\r\n                                    <h2 className='font-weight-light'>Items</h2>\r\n                                    <p className='text-danger'>{errorTextItem}</p>\r\n                                    <TodoInput\r\n                                        items={items}\r\n                                        value={itemInput}\r\n                                        handleInput={this.handleInput}\r\n                                        toggleActive={this.toggleActive}\r\n                                        addItem={this.addItem}\r\n                                    />\r\n                                </div>\r\n                                <TodoItems\r\n                                    items={items}\r\n                                    deleteItem={this.deleteItem}\r\n                                    toggleActive={this.toggleActive}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm='6'>\r\n                            <div className='wrapper__box shadow mb-5 bg-white'>\r\n                                <div className='px-4 pt-3'>\r\n                                    <h2 className='font-weight-light'>Comments #{selectedIdx}</h2>\r\n                                    <p className='text-danger'>{errorTextComment}</p>\r\n                                    {\r\n                                        selectedItem ? (\r\n                                            <Comments\r\n                                                selectedItem={selectedItem}\r\n                                                addComment={this.addComment}\r\n                                                handleCommentInput={this.handleCommentInput}\r\n                                                commentInput={commentInput}\r\n                                            />) : (\r\n                                                <p>Please select an item</p>\r\n                                            )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport './index.css';\r\n\r\nconst Sidebar = () => (\r\n    <div className='dairy__app'>\r\n        <h2 className='font-weight-light'>DAIRY APP</h2>\r\n        <p className='comment__no_sense'>Comment with no sense</p>\r\n    </div>\r\n);\r\n\r\nexport default Sidebar;","import React from 'react';\nimport Todo from './components/App';\nimport Sidebar from './components/Sidebar';\n\nfunction App() {\n  return (\n    <div className='container-fluid p-0'>\n      <div className='row'>\n        <div className='col-lg-2 d-sm-none d-none d-lg-block'>\n          <Sidebar />\n        </div>\n        <div className='col-lg-9'>\n          <Todo />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}